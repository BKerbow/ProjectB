package dev.kerbow.game;

import java.util.Scanner;

import dev.kerbow.fixtures.Room;

public class Main {
	
	private static Player player = new Player();
	private static boolean quit;
	
	private static void printRoom(Player player) {
		if (player.currentRoom != null) {
			System.out.println(player.currentRoom.name);
			System.out.println();
			System.out.println(player.currentRoom.longDescription);
			System.out.println();
			
			System.out.println("Exits: ");
		}
		
		for (int i = 0; i < player.currentRoom.getExits().length; i++)
		{
			Room exit = player.currentRoom.getExits()[i];
			
			if (exit != null) {
				switch(i) {
				case 0: System.out.println("[North]:" + exit.shortDescription()); break;
				case 1: System.out.println("[South]:" + exit.shortDescription()); break;
				case 2: System.out.println("[East]:" + exit.shortDescription()); break;
				case 3: System.out.println("[West]:" + exit.shortDescription()); break;
				case 4: System.out.println("[Northwest]:" + exit.shortDescription()); break;
				case 5: System.out.println("[Southwest]:" + exit.shortDescription()); break;
				case 6: System.out.println("[Northeast]:" + exit.shortDescription()); break;
				case 7: System.out.println("[Southeast]:" + exit.shortDescription()); break;
				case 8: System.out.println("[Up]:" + exit.shortDescription()); break;
				case 9: System.out.println("[Down]:" + exit.shortDescription()); break;
				}
			}
		}
	}
		
	
	private static String[] collectInput(Scanner scanner) {
		String[] input = null;
		
		if (scanner.hasNext()) input = scanner.nextLine().toLowerCase().split(" ");
		
		return input;
	}
	
	private static boolean parse(String[] command){
		if (command == null || command.length == 0) return false;
		
		switch (command[0]) {
		case "go":
			if (command.length == 2) {
				player.currentRoom = player.currentRoom.getExit(command[1]);
				return true;
			} else {
				System.out.println("\"go\" must be followed by a valid direction.");
				return false;
			}
		case "quit": quit = true; return true;
		}
		return false;
	}
	
	public void main(String[] args) {
		RoomManager.init(); //requires cleaning up room manger
		player = new Player(RoomManager.getStartingRoom()); //requires cleaning up room manager
		Scanner scanner = new Scanner(System.in);
		
		do {
			System.out.println("Enter \"quit\" to quit the game.\n");
			printRoom(player);
			if (!parse(collectInput(scanner))) System.out.println("Please enter a valid command.");
		}while (!quit);
		
		System.out.println("Thanks for playing!");
		scanner.close();
		
	}
}
